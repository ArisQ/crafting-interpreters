1+1;
-10;
!!false;
1==2;
1<2;
3>4;
1!=2;
1>=2;
3<=4;
"abc" == "abc";
"abc" == "xyz";
"abc" + "xyz";
"st" + "ri" + "ng";
print 1+2;
print 3+4;
var x = 1+5;
print x;
x;
var beverage = "cafe au lait";
var breakfast = "beignets with " + beverage;
print breakfast;
x=1;
print x;
x=2;
print x;
// a*b = c+d;

{
    var x = 1;
    print x;
    var y = 2;
    print x;
    print y;
    {
        var a = 3;
        print a;
        var b = 4;
        // var x = x;
        y=10;
        print a;
        print b;
        print x;
        print y;
    }
}
var z="global z";
print z;

var x = 3;
if(x>2) print x;
if(x>2) print "greater than 2";
else print "less equal than 2";
print x;

true and true;
true and false;
false and true;
false and false;
true or true;
true or false;
false or true;
false or false;

print true or 1;

var x = 1;
while(x<10) {
    // x = x + 1;
    // print x;
    print x = x + 1;
}
for(var x = 1; x<10; x=x+1) {
    print x;
}

fun x() {
    print 1;
}
x();
var start = clock();
fun fib(n) {
    if(n<2) return n;
    return fib(n-1)+fib(n-2);
}
var n = 36;
print fib(n); //jlox fib(40) => 72s
var end = clock();
print "clox fib ";
print n;
print "cost";
print end - start;

fun wrap(a) {
    print "wraping";
    print a;
    var f;
    {
        var x = a;
        fun f1() {
            print x;
        }
        f = f1;
    }
    return f;
}
var x = wrap(1);
x();

{
    var x = "x" + "y";
    print x;
    x = x + "z";
    print x;
    x = x + "a";
    print x;
}

fun x() {
    print 1;
}
x();
var start = clock();
fun fib(n) {
    if(n<2) return n;
    return fib(n-1)+fib(n-2);
}
var n = 36;
print fib(n); //jlox fib(40) => 72s
var end = clock();
print "clox fib ";
print n;
print "cost";
print end - start;

var b = "hello";
fun wrap(a) {
    print "wraping";
    print a;
    fun f() {
        print b;
        print a;
    }
    return f;
}
var x = wrap(1);
x();

{
fun outer() {
    var a = 1;
    var b = 2;
    fun middle() {
        var c = 3;
        var d = 4;
        fun inner() {
            return a+c+b+d;
        }
        return inner;
    }
    return middle;
}
var m = outer();
var i = m();
print i();
print "x" + "y";
}
print "a" + "b";

var x = "1";
for(var i=0;i<3;i=i+1) {
    x = x + x + "x";
}
print x;

class x {
}
var y = x();
y.a = 1;
y.b = 1;
print y.a;
print y.b;
print y.a + y.b;

class c1 {
    dump() {
        // print this.x;
        print 1;
    }
}
var i1 = c1();
i1.x = 10;
i1.dump();
var x = "1234567890";
var y = x + x + x+ x + x+ x + x; 
for(var i=0;i<10;i=i+1) {
    y = y + x;
}
print y;

fun dof(bonus) {
    if(bonus==0) return 1;
    return dof(bonus - 1);
}
print dof(1);

class x{
    do0(bonus) {
        print this.v;
        print this.x;
    }
    do(bonus) {
        print this.do;
        print this.v + bonus;
        // this = 1;
        class inner {
            do() {
                print this.x;
            }
        }
        var i = inner();
        i.x = 10;
        i.do();
    }
    init(v) {
        this.v = v;

        fun infunc() {
            print "inside method function.";
            print this.v;
        }
        this.infun = infunc;
    }
}
var a = x(1);
a.v = 1;
print a.do(1);
print a.infun();
// print this;

class fib {
    calc(n) {
        if(n<2) return n;
        return this.calc(n-1) + this.calc(n-2);
    }
}
var ins = fib();
var start = clock();
print ins.calc(35);
print clock() - start;
print "method cost";

fun calc(n) {
    if(n<2) return n;
    return calc(n-1) + calc(n-2);
}
var start = clock();
print calc(35);
print clock() - start;
print "func cost";